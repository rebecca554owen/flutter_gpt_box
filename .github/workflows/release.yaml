name: Flutter Release

on:
  workflow_dispatch: 
    inputs:
      tag:
        description: 'Release tag version'
        required: true
        default: 'v0.0.0'
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  releaseAndroid:
    name: Release android
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Fetch secrets
        run: |
          curl -u ${{ secrets.BASIC_AUTH }} -o android/app/app.key ${{ secrets.URL_PREFIX }}app.key
          curl -u ${{ secrets.BASIC_AUTH }} -o android/key.properties ${{ secrets.URL_PREFIX }}key.properties

      - name: Build
        run: dart run fl_build -p android

      - name: Get release tag
        id: get-tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/app/outputs/flutter-apk/*.apk
          tag_name: ${{ steps.get-tag.outputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  releaseLinux:
    name: Release linux
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2

      - name: Install dependencies
        run: |
          sudo apt update
          # Basic
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev libvulkan-dev desktop-file-utils
          # App Specific
          sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libunwind-dev
          # Packaging
          sudo apt install -y rpm patchelf

      - name: Build
        run: |
          dart run flutter_distributor:main release --name linux --skip-clean

      - name: Rename artifacts
        run: |
          deb_name=$(ls dist/*/*.deb)
          mv $deb_name ${{ env.APP_NAME }}_${{ env.BUILD_NUMBER }}_amd64.deb
          rpm_name=$(ls dist/*/*.rpm)
          mv $rpm_name ${{ env.APP_NAME }}_${{ env.BUILD_NUMBER }}_amd64.rpm

      - name: Get release tag
        id: get-tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.APP_NAME }}_${{ env.BUILD_NUMBER }}_amd64.deb
            ${{ env.APP_NAME }}_${{ env.BUILD_NUMBER }}_amd64.rpm
          tag_name: ${{ steps.get-tag.outputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  releaseWin:
    name: Release windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install Flutter
        uses: subosito/flutter-action@v2

      - name: Build
        run: dart run fl_build -p windows

      - name: Get release tag
        id: get-tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.APP_NAME }}_${{ env.BUILD_NUMBER }}_windows_amd64.zip
          tag_name: ${{ steps.get-tag.outputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
